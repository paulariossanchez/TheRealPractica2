<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="junit5-mps-uma"><sessioninfo id="Paula-ba407750" start="1742469332181" dump="1742469334303"/><sessioninfo id="Paula-70deeaf4" start="1742469355559" dump="1742469357647"/><sessioninfo id="Paula-4b95c272" start="1743070189203" dump="1743070190266"/><sessioninfo id="Paula-979ff1d7" start="1743070601868" dump="1743070602922"/><sessioninfo id="Paula-4e073627" start="1743071110604" dump="1743071111666"/><sessioninfo id="LAPTOP-3F8GF3BH-b120dc35" start="1743618783195" dump="1743618785091"/><sessioninfo id="LAPTOP-3F8GF3BH-6ef552a" start="1743619065552" dump="1743619067510"/><sessioninfo id="LAPTOP-3F8GF3BH-ff56cd9d" start="1743619214875" dump="1743619216844"/><sessioninfo id="LAPTOP-3F8GF3BH-9777b5a4" start="1743620297714" dump="1743620299628"/><sessioninfo id="LAPTOP-3F8GF3BH-70ee6ac9" start="1743620496127" dump="1743620498096"/><sessioninfo id="LAPTOP-3F8GF3BH-fadde85d" start="1743620733521" dump="1743620735417"/><sessioninfo id="LAPTOP-3F8GF3BH-cd6a6514" start="1743620816162" dump="1743620818001"/><sessioninfo id="LAPTOP-3F8GF3BH-5776f9c7" start="1743621084670" dump="1743621086645"/><sessioninfo id="LAPTOP-3F8GF3BH-cd32c5aa" start="1743621128784" dump="1743621130807"/><sessioninfo id="LAPTOP-3F8GF3BH-ac43f2c9" start="1743621166463" dump="1743621168566"/><sessioninfo id="LAPTOP-3F8GF3BH-8035201" start="1743621753409" dump="1743621756287"/><sessioninfo id="LAPTOP-3F8GF3BH-33ebe964" start="1743622423306" dump="1743622426173"/><sessioninfo id="LAPTOP-3F8GF3BH-146c9dd3" start="1743622836053" dump="1743622838940"/><sessioninfo id="LAPTOP-3F8GF3BH-f151ab9d" start="1743625178144" dump="1743625180737"/><sessioninfo id="LAPTOP-3F8GF3BH-ecb821b9" start="1743625441280" dump="1743625443209"/><package name="practica2"><class name="practica2/BinarySearchTree" sourcefilename="BinarySearchTree.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Object;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeaf" desc="()Z" line="41"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minimum" desc="()Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maximum" desc="()Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeBranch" desc="(Ljava/lang/Object;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="110"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="depth" desc="()I" line="118"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeValue" desc="(Ljava/lang/Object;)V" line="133"><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inOrder" desc="()Ljava/util/List;" line="159"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="balance" desc="()V" line="170"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="163" covered="285"/><counter type="BRANCH" missed="36" covered="70"/><counter type="LINE" missed="30" covered="58"/><counter type="COMPLEXITY" missed="21" covered="45"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="practica2/BinarySearchTreeException" sourcefilename="BinarySearchTreeException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="practica2/BinarySearchTreeStructure" sourcefilename="BinarySearchTreeStructure.java"/><sourcefile name="BinarySearchTreeStructure.java"/><sourcefile name="BinarySearchTreeException.java"><line nr="5" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinarySearchTree.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="0" cb="2"/><line nr="23" mi="0" ci="3" mb="0" cb="2"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="2"/><line nr="28" mi="0" ci="10" mb="0" cb="2"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="2"/><line nr="31" mi="0" ci="10" mb="0" cb="2"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="13" mb="0" cb="6"/><line nr="46" mi="0" ci="5" mb="0" cb="4"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="12" mb="0" cb="4"/><line nr="56" mi="0" ci="12" mb="0" cb="4"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="4"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="4"/><line nr="94" mi="0" ci="8" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="4"/><line nr="100" mi="0" ci="8" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="2"/><line nr="111" mi="0" ci="9" mb="0" cb="2"/><line nr="112" mi="0" ci="9" mb="0" cb="2"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="2"/><line nr="119" mi="0" ci="9" mb="0" cb="2"/><line nr="120" mi="0" ci="9" mb="0" cb="2"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="2" cb="0"/><line nr="126" mi="9" ci="0" mb="2" cb="0"/><line nr="127" mi="9" ci="0" mb="2" cb="0"/><line nr="128" mi="16" ci="0" mb="4" cb="0"/><line nr="133" mi="4" ci="0" mb="2" cb="0"/><line nr="134" mi="7" ci="0" mb="0" cb="0"/><line nr="135" mi="2" ci="0" mb="2" cb="0"/><line nr="136" mi="6" ci="0" mb="4" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="6" ci="0" mb="0" cb="0"/><line nr="139" mi="3" ci="0" mb="2" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="4" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="5" ci="0" mb="4" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="2" cb="0"/><line nr="161" mi="9" ci="0" mb="2" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="9" ci="0" mb="2" cb="0"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="163" covered="285"/><counter type="BRANCH" missed="36" covered="70"/><counter type="LINE" missed="30" covered="58"/><counter type="COMPLEXITY" missed="21" covered="45"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="163" covered="289"/><counter type="BRANCH" missed="36" covered="70"/><counter type="LINE" missed="30" covered="60"/><counter type="COMPLEXITY" missed="21" covered="46"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="163" covered="289"/><counter type="BRANCH" missed="36" covered="70"/><counter type="LINE" missed="30" covered="60"/><counter type="COMPLEXITY" missed="21" covered="46"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="2"/></report>