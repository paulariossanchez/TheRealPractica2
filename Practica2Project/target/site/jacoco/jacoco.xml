<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="junit5-mps-uma"><sessioninfo id="Paula-ba407750" start="1742469332181" dump="1742469334303"/><sessioninfo id="Paula-70deeaf4" start="1742469355559" dump="1742469357647"/><sessioninfo id="Paula-4b95c272" start="1743070189203" dump="1743070190266"/><sessioninfo id="Paula-979ff1d7" start="1743070601868" dump="1743070602922"/><sessioninfo id="Paula-4e073627" start="1743071110604" dump="1743071111666"/><sessioninfo id="LAPTOP-3F8GF3BH-b120dc35" start="1743618783195" dump="1743618785091"/><sessioninfo id="LAPTOP-3F8GF3BH-6ef552a" start="1743619065552" dump="1743619067510"/><sessioninfo id="LAPTOP-3F8GF3BH-ff56cd9d" start="1743619214875" dump="1743619216844"/><sessioninfo id="LAPTOP-3F8GF3BH-9777b5a4" start="1743620297714" dump="1743620299628"/><sessioninfo id="LAPTOP-3F8GF3BH-70ee6ac9" start="1743620496127" dump="1743620498096"/><sessioninfo id="LAPTOP-3F8GF3BH-fadde85d" start="1743620733521" dump="1743620735417"/><sessioninfo id="LAPTOP-3F8GF3BH-cd6a6514" start="1743620816162" dump="1743620818001"/><sessioninfo id="LAPTOP-3F8GF3BH-5776f9c7" start="1743621084670" dump="1743621086645"/><sessioninfo id="LAPTOP-3F8GF3BH-cd32c5aa" start="1743621128784" dump="1743621130807"/><sessioninfo id="LAPTOP-3F8GF3BH-ac43f2c9" start="1743621166463" dump="1743621168566"/><sessioninfo id="LAPTOP-3F8GF3BH-8035201" start="1743621753409" dump="1743621756287"/><sessioninfo id="LAPTOP-3F8GF3BH-33ebe964" start="1743622423306" dump="1743622426173"/><sessioninfo id="LAPTOP-3F8GF3BH-146c9dd3" start="1743622836053" dump="1743622838940"/><sessioninfo id="LAPTOP-3F8GF3BH-f151ab9d" start="1743625178144" dump="1743625180737"/><sessioninfo id="LAPTOP-3F8GF3BH-ecb821b9" start="1743625441280" dump="1743625443209"/><sessioninfo id="Paula-e697cb5b" start="1743626503748" dump="1743626506126"/><sessioninfo id="Paula-a23e4e68" start="1743626809827" dump="1743626812348"/><sessioninfo id="Paula-f72bc6c2" start="1743627069401" dump="1743627072106"/><sessioninfo id="Paula-cc8576f7" start="1743627226850" dump="1743627229323"/><sessioninfo id="Paula-6a0086a0" start="1743627345148" dump="1743627346490"/><sessioninfo id="LAPTOP-3F8GF3BH-df017892" start="1743627817065" dump="1743627820508"/><sessioninfo id="LAPTOP-3F8GF3BH-378e27f5" start="1743628205038" dump="1743628207075"/><sessioninfo id="LAPTOP-3F8GF3BH-fd105c26" start="1743628394005" dump="1743628395865"/><sessioninfo id="LAPTOP-3F8GF3BH-725d8742" start="1743628670309" dump="1743628672374"/><sessioninfo id="LAPTOP-3F8GF3BH-5b1aad05" start="1743628722556" dump="1743628724427"/><sessioninfo id="LAPTOP-3F8GF3BH-4b4e9e22" start="1743628942087" dump="1743628943871"/><sessioninfo id="LAPTOP-3F8GF3BH-8e7af638" start="1743629040849" dump="1743629042729"/><sessioninfo id="LAPTOP-3F8GF3BH-e2f2228e" start="1743629135998" dump="1743629137955"/><sessioninfo id="LAPTOP-3F8GF3BH-18e0625c" start="1743629191808" dump="1743629193592"/><sessioninfo id="LAPTOP-3F8GF3BH-39606f66" start="1743629351824" dump="1743629353624"/><sessioninfo id="LAPTOP-3F8GF3BH-9b708171" start="1743629928045" dump="1743629929933"/><package name="practica2"><class name="practica2/BinarySearchTree" sourcefilename="BinarySearchTree.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Object;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeaf" desc="()Z" line="43"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="48"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minimum" desc="()Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maximum" desc="()Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeBranch" desc="(Ljava/lang/Object;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="112"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="depth" desc="()I" line="120"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeValue" desc="(Ljava/lang/Object;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inOrder" desc="()Ljava/util/List;" line="161"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="balance" desc="()V" line="172"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="balanceInsert" desc="(Ljava/util/List;II)V" line="186"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="502"/><counter type="BRANCH" missed="0" covered="110"/><counter type="LINE" missed="0" covered="107"/><counter type="COMPLEXITY" missed="0" covered="69"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="practica2/BinarySearchTreeException" sourcefilename="BinarySearchTreeException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="practica2/BinarySearchTreeStructure" sourcefilename="BinarySearchTreeStructure.java"/><sourcefile name="BinarySearchTreeStructure.java"/><sourcefile name="BinarySearchTreeException.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinarySearchTree.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="2"/><line nr="25" mi="0" ci="3" mb="0" cb="2"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="2"/><line nr="30" mi="0" ci="10" mb="0" cb="2"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="10" mb="0" cb="2"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="0" cb="6"/><line nr="48" mi="0" ci="5" mb="0" cb="4"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="2"/><line nr="56" mi="0" ci="12" mb="0" cb="4"/><line nr="58" mi="0" ci="12" mb="0" cb="4"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="4"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="4"/><line nr="96" mi="0" ci="8" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="4"/><line nr="102" mi="0" ci="8" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="2"/><line nr="113" mi="0" ci="9" mb="0" cb="2"/><line nr="114" mi="0" ci="9" mb="0" cb="2"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="2"/><line nr="121" mi="0" ci="9" mb="0" cb="2"/><line nr="122" mi="0" ci="9" mb="0" cb="2"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="2"/><line nr="128" mi="0" ci="9" mb="0" cb="2"/><line nr="129" mi="0" ci="9" mb="0" cb="2"/><line nr="130" mi="0" ci="16" mb="0" cb="4"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="2"/><line nr="138" mi="0" ci="6" mb="0" cb="4"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="2"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="4"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="4"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="2"/><line nr="163" mi="0" ci="9" mb="0" cb="2"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="9" mb="0" cb="2"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="2"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="502"/><counter type="BRANCH" missed="0" covered="110"/><counter type="LINE" missed="0" covered="107"/><counter type="COMPLEXITY" missed="0" covered="69"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="506"/><counter type="BRANCH" missed="0" covered="110"/><counter type="LINE" missed="0" covered="109"/><counter type="COMPLEXITY" missed="0" covered="70"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="2"/></package><counter type="INSTRUCTION" missed="0" covered="506"/><counter type="BRANCH" missed="0" covered="110"/><counter type="LINE" missed="0" covered="109"/><counter type="COMPLEXITY" missed="0" covered="70"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="2"/></report>